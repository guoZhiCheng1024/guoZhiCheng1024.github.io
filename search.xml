<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MyAPI项目（一）</title>
      <link href="/2023/04/06/MyAPI(%E4%B8%80)/"/>
      <url>/2023/04/06/MyAPI(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="MyAPI-项目（一）"><a href="#MyAPI-项目（一）" class="headerlink" title="MyAPI 项目（一）"></a>MyAPI 项目（一）</h1><h2 id="1-项目介绍"><a href="#1-项目介绍" class="headerlink" title="1. 项目介绍"></a>1. 项目介绍</h2><p>提供API 接口的调用平台</p><p>用户可以注册登录，开通接口的调用权限   还可以使用接口，并且每次调用会进行统计</p><p>管理员   可以发布接口  下线接口 接入接口  并且能够可视化接口的调用情况、数据。</p><h2 id="2-业务模型"><a href="#2-业务模型" class="headerlink" title="2. 业务模型"></a>2. 业务模型</h2><p><a href="https://imgse.com/i/ppI2tMV"><img src="https://s1.ax1x.com/2023/04/06/ppI2tMV.png" alt="ppI2tMV.png"></a></p><h2 id="3-项目技术"><a href="#3-项目技术" class="headerlink" title="3. 项目技术"></a>3. 项目技术</h2><h3 id="前段"><a href="#前段" class="headerlink" title="前段"></a>前段</h3><p> ant design pro  （开箱即用的前端框架）</p><p><strong>React</strong></p><p><strong>（React是用于构建用户界面的JavaScript库，起源于Facebook的内部项目用于架设Instagram的网站。）</strong></p><p><strong>（特点：</strong></p><p><strong>1.简单</strong><br> <strong>简单的表述任意时间点你的应用应该是什么样子的，React将会自动的管理UI界面更新当数据发生变化的时候。</strong></p><p><strong>2.声明式</strong><br> <strong>在数据发生变化的时候，React从概念上讲与点击了F5一样，实际上它仅仅是更新了变化的一部分而已。</strong><br> <strong>React是关于构造可重用组件的，实际上，使用React你做的仅仅是构建组建。通过封装，使得组件代码复用、测试以及关注点分离更加容易。）</strong></p><p>Umi （脚手架）</p><p>Umi Request(Axios的封装)</p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p> spring boot 模版（其中整合了各种技术 ）</p><p>Spring Boot Starter  （SDK开发）</p><p><a href="https://imgse.com/i/ppIRMy6"><img src="https://s1.ax1x.com/2023/04/06/ppIRMy6.png" alt="ppIRMy6.png"></a></p><h2 id="4-项目初始化"><a href="#4-项目初始化" class="headerlink" title="4. 项目初始化"></a>4. 项目初始化</h2><h4 id="技术软件版本"><a href="#技术软件版本" class="headerlink" title="技术软件版本"></a>技术软件版本</h4><p>node 18.14.2</p><p>spring boot  2.7.0 </p><h4 id="前端初始化（Ant-Design-Pro初始化）"><a href="#前端初始化（Ant-Design-Pro初始化）" class="headerlink" title="前端初始化（Ant Design Pro初始化）"></a>前端初始化（Ant Design Pro初始化）</h4><ol><li>使用node安装Ant Design Pro</li></ol><p>​使用语句 </p><p><a href="https://imgse.com/i/ppIR3wD"><img src="https://s1.ax1x.com/2023/04/06/ppIR3wD.png" alt="ppIR3wD.png"></a></p><ol start="2"><li><p>创建文件夹   并在路径中  cmd 启动</p></li><li><p>创建项目</p><p>输入 pro create MyAPI  </p><p>选择 umi@4</p></li><li><p>用vcode 或者 WebStorm 打开文件夹</p></li><li><p>在终端中安装依赖      yarn  或者 npm install</p></li><li><p>在package.json 中  点击start 启动项目</p></li></ol><h4 id="后端初始化"><a href="#后端初始化" class="headerlink" title="后端初始化"></a>后端初始化</h4><h5 id="使用SpringBoot项目初始化模版（或者在IDEA中创建项目-然后在引入依赖）"><a href="#使用SpringBoot项目初始化模版（或者在IDEA中创建项目-然后在引入依赖）" class="headerlink" title="使用SpringBoot项目初始化模版（或者在IDEA中创建项目  然后在引入依赖）"></a>使用SpringBoot项目初始化模版（或者在IDEA中创建项目  然后在引入依赖）</h5><p><a href="https://imgse.com/i/ppIRYYd"><img src="https://s1.ax1x.com/2023/04/06/ppIRYYd.png" alt="ppIRYYd.png"></a></p><ol><li>先安装依赖</li><li>修改项目名称  修改连接数据库的密码 以及数据库名称</li></ol><h2 id="5-创建数据库表"><a href="#5-创建数据库表" class="headerlink" title="5. 创建数据库表"></a>5. 创建数据库表</h2><h3 id="创建用户表"><a href="#创建用户表" class="headerlink" title="创建用户表"></a>创建用户表</h3><p><a href="https://imgse.com/i/ppIRBm8"><img src="https://s1.ax1x.com/2023/04/06/ppIRBm8.png" alt="ppIRBm8.png"></a></p><h3 id="创建接口信息表"><a href="#创建接口信息表" class="headerlink" title="创建接口信息表"></a>创建接口信息表</h3><p><a href="https://imgse.com/i/ppIRykQ"><img src="https://s1.ax1x.com/2023/04/06/ppIRykQ.png" alt="ppIRykQ.png"></a></p><h3 id="创建用户调用接口关系表"><a href="#创建用户调用接口关系表" class="headerlink" title="创建用户调用接口关系表"></a>创建用户调用接口关系表</h3><p><a href="https://imgse.com/i/ppIR2pn"><img src="https://s1.ax1x.com/2023/04/06/ppIR2pn.png" alt="ppIR2pn.png"></a></p><h3 id="插入假数据"><a href="#插入假数据" class="headerlink" title="插入假数据"></a>插入假数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;许擎宇&#x27;, &#x27;薛聪健&#x27;, &#x27;www.cary-king.net&#x27;, &#x27;潘博涛&#x27;, &#x27;谭聪健&#x27;, 0, &#x27;石炫明&#x27;, 9500534531);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;陆弘文&#x27;, &#x27;白志强&#x27;, &#x27;www.leslee-kuhn.net&#x27;, &#x27;潘懿轩&#x27;, &#x27;马鸿涛&#x27;, 0, &#x27;陈峻熙&#x27;, 3982575846);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;毛建辉&#x27;, &#x27;罗文&#x27;, &#x27;www.rosaria-kilback.io&#x27;, &#x27;冯子默&#x27;, &#x27;彭哲瀚&#x27;, 0, &#x27;赵远航&#x27;, 121776355);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;彭雨泽&#x27;, &#x27;蔡煜祺&#x27;, &#x27;www.norris-bergstrom.biz&#x27;, &#x27;董思源&#x27;, &#x27;田晓博&#x27;, 0, &#x27;潘擎宇&#x27;, 740);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;傅志强&#x27;, &#x27;陈梓晨&#x27;, &#x27;www.jordan-reinger.com&#x27;, &#x27;金志强&#x27;, &#x27;熊锦程&#x27;, 0, &#x27;邓睿渊&#x27;, 35542559);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;吕黎昕&#x27;, &#x27;孔越彬&#x27;, &#x27;www.fe-okon.info&#x27;, &#x27;万伟宸&#x27;, &#x27;林昊然&#x27;, 0, &#x27;孟荣轩&#x27;, 1445);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;夏雪松&#x27;, &#x27;许子骞&#x27;, &#x27;www.lashawna-legros.co&#x27;, &#x27;蔡昊然&#x27;, &#x27;胡鹏涛&#x27;, 0, &#x27;钟立辉&#x27;, 34075514);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;严钰轩&#x27;, &#x27;阎志泽&#x27;, &#x27;www.kay-funk.biz&#x27;, &#x27;莫皓轩&#x27;, &#x27;郭黎昕&#x27;, 0, &#x27;龚天宇&#x27;, 70956);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;萧嘉懿&#x27;, &#x27;曹熠彤&#x27;, &#x27;www.margarette-lindgren.biz&#x27;, &#x27;田泽洋&#x27;, &#x27;邓睿渊&#x27;, 0, &#x27;梁志强&#x27;, 98);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;杜驰&#x27;, &#x27;冯思源&#x27;, &#x27;www.vashti-auer.org&#x27;, &#x27;黎健柏&#x27;, &#x27;武博文&#x27;, 0, &#x27;李伟宸&#x27;, 9);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;史金鑫&#x27;, &#x27;蔡鹏涛&#x27;, &#x27;www.diann-keebler.org&#x27;, &#x27;徐烨霖&#x27;, &#x27;阎建辉&#x27;, 0, &#x27;李烨伟&#x27;, 125);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;林炫明&#x27;, &#x27;贾旭尧&#x27;, &#x27;www.dotty-kuvalis.io&#x27;, &#x27;梁雨泽&#x27;, &#x27;龙伟泽&#x27;, 0, &#x27;许智渊&#x27;, 79998);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;何钰轩&#x27;, &#x27;赖智宸&#x27;, &#x27;www.andy-adams.net&#x27;, &#x27;崔思淼&#x27;, &#x27;白鸿煊&#x27;, 0, &#x27;邵振家&#x27;, 7167482751);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;魏志强&#x27;, &#x27;于立诚&#x27;, &#x27;www.ione-aufderhar.biz&#x27;, &#x27;朱懿轩&#x27;, &#x27;万智渊&#x27;, 0, &#x27;唐昊强&#x27;, 741098);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;严君浩&#x27;, &#x27;金胤祥&#x27;, &#x27;www.duane-boyle.org&#x27;, &#x27;雷昊焱&#x27;, &#x27;侯思聪&#x27;, 0, &#x27;郝思&#x27;, 580514);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;姚皓轩&#x27;, &#x27;金鹏&#x27;, &#x27;www.lyda-klein.biz&#x27;, &#x27;杜昊强&#x27;, &#x27;邵志泽&#x27;, 0, &#x27;冯鸿涛&#x27;, 6546);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;廖驰&#x27;, &#x27;沈泽洋&#x27;, &#x27;www.consuelo-sipes.info&#x27;, &#x27;彭昊然&#x27;, &#x27;邓耀杰&#x27;, 0, &#x27;周彬&#x27;, 7761037);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;赖智渊&#x27;, &#x27;邓志泽&#x27;, &#x27;www.emerson-mann.co&#x27;, &#x27;熊明哲&#x27;, &#x27;贺哲瀚&#x27;, 0, &#x27;田鹏&#x27;, 381422);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;许涛&#x27;, &#x27;陆致远&#x27;, &#x27;www.vella-ankunding.name&#x27;, &#x27;贾哲瀚&#x27;, &#x27;莫昊焱&#x27;, 0, &#x27;袁越彬&#x27;, 4218096);</span><br><span class="line">insert into guoapi.`interface_info` (`name`, `description`, `url`, `requestHeader`, `responseHeader`, `status`, `method`, `userId`) values (&#x27;吕峻熙&#x27;, &#x27;沈鹏飞&#x27;, &#x27;www.shari-reichel.org&#x27;, &#x27;郭鸿煊&#x27;, &#x27;覃烨霖&#x27;, 0, &#x27;熊黎昕&#x27;, 493);</span><br></pre></td></tr></table></figure><p>对interface_info 运行上面的mysql 语句  插入假数据</p><h2 id="6-使用Mybatis-plus-X插件"><a href="#6-使用Mybatis-plus-X插件" class="headerlink" title="6.使用Mybatis-plus-X插件"></a>6.使用Mybatis-plus-X插件</h2><p>对interface_info使用Mybatis-plus-X 插件生成对应的文件</p><p>然后将</p><p>domain</p><p>mapper</p><p>service</p><p>分别转移到对应的文件里面   重构一下</p><h2 id="7-创建interfaceinfo"><a href="#7-创建interfaceinfo" class="headerlink" title="7.创建interfaceinfo"></a>7.创建interfaceinfo</h2><p>在model.dto文件下创建interfaceinfo（包名为全小写）</p><p>分别在里面创建接口请求</p><p><a href="https://imgse.com/i/ppIRRlq"><img src="https://s1.ax1x.com/2023/04/06/ppIRRlq.png" alt="ppIRRlq.png"></a></p><p>接口添加请求    接口信息查询请求  接口上传请求</p><p>在里面编写添加接口时需要填写的信息</p><p>在里面编写查询接口时需要查询的信息</p><p>在里面编写上传接口时需要上传的信息</p><h2 id="8-前端"><a href="#8-前端" class="headerlink" title="8.前端"></a>8.前端</h2><h3 id="使用openAPI"><a href="#使用openAPI" class="headerlink" title="使用openAPI"></a>使用openAPI</h3><p>使用Umi 的openAPI按照规范自动生成</p><p><a href="https://imgse.com/i/ppIRfXV"><img src="https://s1.ax1x.com/2023/04/06/ppIRfXV.png" alt="ppIRfXV.png"></a></p><p>然后调整前端  ant design pro  使用我们生成的接口。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/06/hello-world/"/>
      <url>/2023/04/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
